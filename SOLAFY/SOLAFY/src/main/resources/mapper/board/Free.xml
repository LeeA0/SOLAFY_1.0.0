<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
 <!--
 	* @FileName : Free.xml
	* @Project : SOLAFY
	* @Date : 2020. 12. 15
	* @작성자 : BUMSEOK SEO
	
	* @변경이력 :
	* @프로그램 설명 : 자유게시판 관련 쿼리문
 -->
	
<mapper namespace="com.solafy.mapper.board.FreeBoardMapper">
	<!-- 게시물 등록 -->
	<insert id="createArticle" parameterType="FreeBoardDto">
		insert into freeboard (title, contents, uid, likeCount, isNotice, regiTime, isGroup, groupNo, boardNo)
		values(#{title}, #{contents}, #{uid}, #{likeCount}, #{isNotice}, now(), #{isGroup}, #{groupNo}, #{boardNo});
	</insert>
	
	<!--
		모든 게시물을 반환.
		게시글번호, 닉네임, 공지사항 여부, 제목, 등록시간, 종아요 갯수를 가져온다.
		articleNo, nickname, isNotice, title, regiTime, likeCount
	-->
	<select id="selectAllNotices" resultType="FreeBoardDto">
		select articleNo, nickname,isNotice,title, regiTime, likeCount
		from freeboard fb join userinfo ui
        on fb.uid = ui.uid
        where isNotice = 1
		order by articleNo desc
	</select>
	
	<!--
		모든 게시물을 반환.
		게시글번호, 닉네임, 공지사항여부, 제목,등록시간, 종아요 갯수를 가져온다.
		articleNo, nickname,title, regiTime, likeCount
	-->
	<select id="selectAllArticles" resultType="FreeBoardDto">
		select articleNo, nickname, isNotice, title, regiTime, likeCount
		from freeboard fb join userinfo ui
        on fb.uid = ui.uid
        where isNotice = 0
		order by articleNo desc
	</select>
	
	
	
	<!--
		인자값으로 가져온 게시글 번호에 맞는 게시글을 반환.
		해당 게시글의 모든 저장된 정보를 가져온다(articleNo, title, contents, uid, likeCount,isNotice, regiTime, isGroup, groupNo, boardNo, fb.uid)
		2021-01-04(BUMSEOK SEO) : 프로필 사진을 불러오기 위해 필요한 uid를 가져오는 쿼리문 추가
	-->
	<select id="selectArticleByArticleNo" parameterType="int" resultType="FreeBoardDto">
		select articleNo, title, contents, nickname, likeCount,isNotice, regiTime, isGroup, groupNo, boardNo ,fb.uid
		from freeboard fb join userinfo ui
        on fb.uid = ui.uid
		where articleNo = #{articleNo}
	</select>

	<!--
		인자값으로 가져온 검색어를 포함하는 제목을 가진 게시글을 반환.
		해당 게시글의 정보를 가져온다(articleNo, nickname, title, regiTime, likeCount)
	-->
	<select id="selectArticleByTitle" parameterType="String" resultType="FreeBoardDto">
		select articleNo, nickname,title, regiTime, likeCount
		from freeboard fb join userinfo ui
        on fb.uid = ui.uid
		where title LIKE CONCAT('%', #{title}, '%') and isNotice = 0
	</select>
	
	<!--
		입력한 닉네임에 맞는 게시글을 반환.
		해당 게시글의 정보를 가져온다(articleNo, nickname,title, regiTime, likeCount)
	-->
	<select id="selectArticleByNickname" parameterType="String" resultType="FreeBoardDto">
		select articleNo, nickname,title, regiTime, likeCount 
		from freeboard fb join userinfo ui
        on fb.uid = ui.uid
		where nickname = #{nickname} and isNotice = 0
	</select>
	
	<!--
		게시글 수정.
		수정가능한 내용은 제목(title), 내용(contents), 공지사항여부(isNotice).
	-->
	<update id="updateArticle" parameterType="FreeBoardDto">
		update freeboard
		set title = #{title}, contents = #{contents}, isNotice = #{isNotice}
		where articleNo = #{articleNo}
	</update>
	
	<!--
		게시물 삭제.
		인자값으로 가져온 게시글 번호에 해당하는 게시물을 삭제.
	-->
	<delete id="deleteArticle" parameterType="int">
		delete from freeboard
		where articleNo = #{articleNo}
	</delete>	
</mapper>