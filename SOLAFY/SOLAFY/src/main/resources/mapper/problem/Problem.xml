<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.solafy.mapper.problem.ProblemMapper">
	<!--
	@FileName : Problem.xml
	@Project : SOLAFY
	@Date : 2020. 12. 15.
	@작성자 : Lee Ayoung
	
	@변경이력 :
	@프로그램 설명 : Problem SQL 
	-->
	<!-- TODO: uid 대신 닉네임 나오게 바꾸기 -->
	
	
	<!-- 문제의 정보 반환(상세보기 용) -->
	<select id="selectProblem" parameterType="int" resultType="ProblemDto">
		select problemNo, multipleChoice, title, uid, contents, categoryNo, type  
		from problem
		where problemNo = #{problemNo}
	</select>
	
	<!-- 문제의 소분류 카테고리 반환(상세보기 용) -->
	<select id="selectCategorySmall" parameterType="int" resultType="CategorySmallDto">
		select categoryNo, categoryName
		from categorysmall
		where categoryNo = #{categorySmallNo}
	</select>
	
	<!-- 문제의 중분류 카테고리 반환(상세보기 용) -->
	<select id="selectCategoryMedium" parameterType="int" resultType="CategoryMediumDto">
		select categoryNo, categoryName
		from categorymedium
		where categoryNo = #{categoryMediumNo}
	</select>
	
	<!-- 문제의 대분류 카테고리 반환(상세보기 용) -->
	<select id="selectCategoryLarge" parameterType="int" resultType="CategoryLargeDto">
		select categoryNo, categoryName
		from categorylarge
		where categoryNo = #{categoryLargeNo}
	</select>
	
	<!-- 문제의 해시태그 반환 : hashtagmapping테이블에서 문제 번호를 받아 반환 -->
	<select id="selectHashTagList" parameterType="int" resultType="HashTagDto">
		select h.hashTagNo, h.hashTag
		from hashtag h join hashtagmapping m
		on h.hashTagNo = m.hashTagNo
		where m.problemNo = #{problemNo}
	</select>
	
	<!-- 해시태그번호로 문제 검색 -->
	<select id="selectProblemByHashTag" parameterType="int" resultType="ProblemDto">
		select p.problemNo, p.title, p.uid
		from hashtagmapping m join problem p
		on m.problemNo = p.problemNo
		where m.hashTagNo = #{hashTagNo}
	</select>
	
	<!-- 소분류 카테고리를 이용한 문제 검색 -->
	<select id="selectProblemByCategorySmall" parameterType="String" resultType="ProblemDto">
		select problemNo, title, uid
		from problem
		where categoryNo = #{categoryNo}
	</select>
	
	<!-- 중분류 카테고리를 이용한 문제 검색 -->
	<select id="selectProblemByCategoryMedium" parameterType="String" resultType="ProblemDto">
		select problemNo, title, uid
		from problem
		where categoryNo like concat(#{categoryLargeMediumNo}, '%')
	</select>
	
	<!-- 대분류 카테고리를 이용한 문제 검색 -->
	<select id="selectProblemByCategoryLarge" parameterType="String" resultType="ProblemDto">
		select problemNo, title, uid
		from problem
		where categoryNo like concat(#{categoryLargeNo}, '%')
	</select>
	
	<!-- 문제이름(일부)으로 검색 -->
	<select id="selectProblemByName" parameterType="String" resultType="ProblemDto">
		select problemNo, title, uid
		from problem
		where title like concat('%', #{title}, '%')
	</select>
	
	<!-- 문제번호로 검색 -->
	<select id="selectProblemByProblemNo" parameterType="int" resultType="ProblemDto">
		select problemNo, title, uid
		from problem
		where problemNo = #{problemNo}
	</select>
	
	<!-- 유저닉네임으로 검색 -->
	<select id="selectProblemByUserNickname" parameterType="int" resultType="ProblemDto">
		select p.problemNo, p.title, p.uid
		from problem p join usernickname u
		on p.uid = u.uid
		where u.nickname = #{nickname}
	</select>
	
	<!-- 문제 등록 -->
	<!-- useGeneratedKeys="true" keyProperty="값을 받아올컬럼명"을 써주면 insert문 실행 후 ProblemDto의 해당 컬럼에 값을 넣어준다 -->
	<insert id="createProblem" parameterType="ProblemDto" useGeneratedKeys="true" keyProperty="problemNo">
		insert into problem (multipleChoice, title, uid, contents, categoryNo, type)
		values(#{multipleChoice}, #{title}, #{uid},#{contents},#{categoryNo},#{type})
	</insert>
	
	<!-- 문제와 해시태그를 연결 -->
	<insert id="createHashTagMapping" parameterType="int">
		insert into hashtagmapping (problemNo,hashTagNo)
		values(#{problemNo}, #{hashTagNo})
	</insert>
	
	<!-- 문제 수정 -->
	<update id="updateProblem" parameterType="ProblemDto">
		update problem
		set multipleChoice = #{multipleChoice},title=#{title},uid=#{uid},contents=#{contents},categoryNo=#{categoryNo},type=#{type}
		where problemNo = #{problemNo}	
	</update>
	
	<!-- 문제 삭제 -->
	<delete id="deleteProblem" parameterType="int">
		delete from problem
		where problemNo = #{problemNo}
	</delete>
</mapper>